<link href="https://fonts.googleapis.com/css2?family=Cinzel+Decorative:wght@400;700&family=Uncial+Antiqua&display=swap" rel="stylesheet">

<!-- PHẦN HTML -->
<div class="container mt-4">
 
  <!-- Header với Gradient -->
  <div class="page-header text-center mb-5">
    <h1 class="display-4 fw-bold gradient-text mb-3">
      <i class="fas fa-heart me-3"></i>DANH SÁCH YÊU THÍCH
    </h1>
    <p class="lead text-muted">
      Những cuốn sách bạn yêu thích nhất
    </p>
  </div>

  <!-- Flash Messages -->
  <% if (success && success.length > 0) { %>
  <div class="alert alert-success-custom alert-dismissible fade show" role="alert">
    <i class="fas fa-check-circle me-2"></i>
    <% success.forEach(msg => { %>
    <span><%= msg %></span>
    <% }) %>
    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
  </div>
  <% } %>
  
  <% if (error && error.length > 0) { %>
  <div class="alert alert-danger-custom alert-dismissible fade show" role="alert">
    <i class="fas fa-exclamation-circle me-2"></i>
    <% error.forEach(msg => { %>
    <span><%= msg %></span>
    <% }) %>
    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
  </div>
  <% } %>

  <!-- Form Tìm kiếm -->
  <form method="GET" action="/favorites" class="mb-5">
    <% if (typeof currentCategory !== 'undefined' && currentCategory !== 'all') { %>
    <input type="hidden" name="category" value="<%= currentCategory %>" />
    <% } %>
    <div class="search-box">
      <div class="search-inner">
        <i class="fas fa-search search-icon"></i>
        <input
          type="text"
          name="search"
          class="search-input"
          placeholder="Tìm kiếm sách yêu thích theo tiêu đề, tác giả, thể loại..."
          value="<%= typeof search !== 'undefined' ? search : '' %>"
          aria-label="Tìm kiếm sách yêu thích"
        />
        <button class="search-btn" type="submit">
          <i class="fas fa-arrow-right"></i>
        </button>
      </div>
    </div>
    <% if (typeof search !== 'undefined' && search) { %>
    <div class="mt-3 text-center">
      <a href="/favorites?category=<%= typeof currentCategory !== 'undefined' && currentCategory !== 'all' ? encodeURIComponent(currentCategory) : '' %>" class="clear-search-btn">
        <i class="fas fa-times me-2"></i>Xóa tìm kiếm
      </a>
    </div>
    <% } %>
  </form>

  <div class="row g-4">
    <!-- Sidebar Categories -->
    <div class="col-lg-3">
      <div class="category-sidebar">
        <div class="sidebar-header">
          <i class="fas fa-tags me-2"></i>
          <span>Danh Mục Sách</span>
        </div>
        <div class="category-list">
          <a href="/favorites" class="category-item <%= typeof currentCategory !== 'undefined' && currentCategory === 'all' ? 'active' : '' %>">
            <i class="fas fa-th-large me-2"></i>
            <span>Tất cả</span>
            <i class="fas fa-chevron-right ms-auto"></i>
          </a>
          <% if (typeof categories !== 'undefined' && Array.isArray(categories)) { %>
            <% categories.forEach(cat => { %>
            <a href="/favorites?category=<%= encodeURIComponent(cat) %>" class="category-item <%= typeof currentCategory !== 'undefined' && currentCategory === cat ? 'active' : '' %>">
              <i class="fas fa-bookmark me-2"></i>
              <span><%= cat %></span>
              <i class="fas fa-chevron-right ms-auto"></i>
            </a>
            <% }) %>
          <% } else { %>
            <p class="text-muted p-3">Không có danh mục nào được tải.</p>
          <% } %>
        </div>
      </div>
    </div>

    <!-- Book Grid -->
    <div class="col-lg-9">
      <% if (typeof books !== 'undefined' && books && books.length > 0) { %>
      <div class="book-grid">
        <% books.forEach(book => { %>
          <%
            let fullDescription = book.description || book.summary || 'Chưa có mô tả cho cuốn sách này.';
            let tooltipDescription = fullDescription.length > 200 
              ? fullDescription.substring(0, 200) + '...' 
              : fullDescription;
            let isFavorited = typeof favoriteBooks !== 'undefined' && favoriteBooks && favoriteBooks.includes(book.isFromAPI ? book._id : book._id.toString());
          %>
          <a 
            href="<%= book.isFromAPI ? `/books/api-detail/${book._id}` : `/books/${book._id}` %>" 
            class="book-item" 
            data-title="<%= book.title %>"
            data-author="<%= book.author || 'Unknown Author' %>" 
            data-book-id="<%= book.isFromAPI ? book._id : book._id.toString() %>"
            data-description="<%= tooltipDescription %>"
            data-category="<%= Array.isArray(book.category) ? book.category.join(', ') : book.category || 'N/A' %>"
          >
            <div class="book-cover">
              <% if (book.coverImage || book.cover_i) { %>
              <img
                src="<%= book.coverImage || `https://covers.openlibrary.org/b/id/${book.cover_i}-M.jpg` %>"
                alt="<%= book.title %>"
                class="book-image"
                onerror="this.parentElement.innerHTML='<div class=\'no-cover\'><i class=\'fas fa-book fa-4x\'></i></div>'"
              />
              <% } else { %>
              <div class="no-cover">
                <i class="fas fa-book fa-4x"></i>
              </div>
              <% } %>
            </div>
            <div class="book-title-below">
              <h5><%= book.title %></h5>
            </div>
          </a>
        <% }) %>
      </div>

      <!-- Pagination -->
      <% if (typeof totalPages !== 'undefined' && totalPages > 1) { %>
      <nav class="pagination-wrapper mt-5">
        <ul class="pagination-pro">
          <% if (typeof currentPage !== 'undefined' && currentPage > 1) { %>
          <li>
            <a href="/favorites?page=<%= currentPage - 1 %>&search=<%= typeof search !== 'undefined' ? encodeURIComponent(search) : '' %>&category=<%= typeof currentCategory !== 'undefined' && currentCategory !== 'all' ? encodeURIComponent(currentCategory) : '' %>" class="page-link-pro">
              <i class="fas fa-chevron-left"></i>
            </a>
          </li>
          <% } %>
          
          <% 
            let range = 6;
            if (typeof currentPage !== 'undefined' && typeof totalPages !== 'undefined') {
              if (currentPage > totalPages - 6) range = Math.max(6, totalPages - currentPage);
              if (currentPage < 7) range = 6;
              const startPage = Math.max(1, currentPage - range);
              const endPage = Math.min(totalPages, currentPage + range);
              for (let i = startPage; i <= endPage; i++) { 
          %>
          <li>
            <a href="/favorites?page=<%= i %>&search=<%= typeof search !== 'undefined' ? encodeURIComponent(search) : '' %>&category=<%= typeof currentCategory !== 'undefined' && currentCategory !== 'all' ? encodeURIComponent(currentCategory) : '' %>" class="page-link-pro <%= i === currentPage ? 'active' : '' %>">
              <%= i %>
            </a>
          </li>
          <% } %>
          <% } %>
          
          <% if (typeof currentPage !== 'undefined' && typeof totalPages !== 'undefined' && currentPage < totalPages) { %>
          <li>
            <a href="/favorites?page=<%= currentPage + 1 %>&search=<%= typeof search !== 'undefined' ? encodeURIComponent(search) : '' %>&category=<%= typeof currentCategory !== 'undefined' && currentCategory !== 'all' ? encodeURIComponent(currentCategory) : '' %>" class="page-link-pro">
              <i class="fas fa-chevron-right"></i>
            </a>
          </li>
          <% } %>
        </ul>
      </nav>
      <% } %>
      
      <% } else { %>
      <div class="empty-state">
        <div class="empty-icon">
          <i class="fas fa-heart-broken"></i>
        </div>
        <h3>Chưa có sách yêu thích</h3>
        <p>Thêm sách vào danh sách yêu thích để xem chúng tại đây!</p>
        <a href="/books" class="btn-primary-gradient">
          <i class="fas fa-book me-2"></i>Khám phá sách
        </a>
      </div>
      <% } %>
    </div>
  </div>
</div>

<style>
  .gradient-text {
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
  }

  .page-header {
    padding: 2rem 0;
    animation: fadeInDown 0.6s ease;
  }

  @keyframes fadeInDown {
    from {
      opacity: 0;
      transform: translateY(-20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  .alert-success-custom,
  .alert-danger-custom {
    border: none;
    border-radius: 15px;
    padding: 1rem 1.5rem;
    backdrop-filter: blur(10px);
    animation: slideInRight 0.5s ease;
  }

  .alert-success-custom {
    background: linear-gradient(135deg, rgba(16, 185, 129, 0.1), rgba(5, 150, 105, 0.1));
    border-left: 4px solid #10b981;
    color: #065f46;
  }

  .alert-danger-custom {
    background: linear-gradient(135deg, rgba(239, 68, 68, 0.1), rgba(220, 38, 38, 0.1));
    border-left: 4px solid #ef4444;
    color: #991b1b;
  }

  @keyframes slideInRight {
    from {
      opacity: 0;
      transform: translateX(50px);
    }
    to {
      opacity: 1;
      transform: translateX(0);
    }
  }

  .search-box {
    max-width: 800px;
    margin: 0 auto;
  }

  .search-inner {
    position: relative;
    background: linear-gradient(135deg, rgba(255, 255, 255, 0.9), rgba(255, 255, 255, 0.7));
    backdrop-filter: blur(20px);
    border-radius: 50px;
    padding: 8px 8px 8px 60px;
    box-shadow: 0 10px 40px rgba(0, 0, 0, 0.1);
    display: flex;
    align-items: center;
    transition: all 0.3s ease;
  }

  .search-inner:hover {
    box-shadow: 0 15px 50px rgba(0, 0, 0, 0.15);
    transform: translateY(-2px);
  }

  .search-icon {
    position: absolute;
    left: 25px;
    font-size: 20px;
    color: #667eea;
  }

  .search-input {
    flex: 1;
    border: none;
    background: transparent;
    font-size: 16px;
    padding: 12px 15px;
    outline: none;
  }

  .search-btn {
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    border: none;
    border-radius: 50%;
    width: 50px;
    height: 50px;
    display: flex;
    align-items: center;
    justify-content: center;
    color: white;
    cursor: pointer;
    transition: all 0.3s ease;
  }

  .search-btn:hover {
    transform: scale(1.1) rotate(90deg);
    box-shadow: 0 5px 20px rgba(102, 126, 234, 0.4);
  }

  .clear-search-btn {
    display: inline-block;
    padding: 8px 20px;
    background: rgba(239, 68, 68, 0.1);
    color: #ef4444;
    border-radius: 20px;
    text-decoration: none;
    transition: all 0.3s ease;
  }

  .clear-search-btn:hover {
    background: rgba(239, 68, 68, 0.2);
    transform: scale(1.05);
  }

  .category-sidebar {
    background: linear-gradient(135deg, rgba(255, 255, 255, 0.95), rgba(255, 255, 255, 0.85));
    backdrop-filter: blur(20px);
    border-radius: 20px;
    overflow: hidden;
    box-shadow: 0 10px 40px rgba(0, 0, 0, 0.1);
    position: sticky;
    top: 20px;
  }

  .sidebar-header {
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    color: white;
    padding: 20px;
    font-size: 18px;
    font-weight: 600;
    display: flex;
    align-items: center;
  }

  .category-list {
    padding: 10px;
  }

  .category-item {
    display: flex;
    align-items: center;
    padding: 15px;
    margin: 5px 0;
    border-radius: 12px;
    text-decoration: none;
    color: #374151;
    transition: all 0.3s ease;
    position: relative;
    overflow: hidden;
    z-index: 1;
  }

  .category-item::before {
    content: "";
    position: absolute;
    left: 0;
    top: 0;
    height: 100%;
    width: 0;
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    transition: width 0.3s ease;
    z-index: -1;
  }

  .category-item:hover::before,
  .category-item.active::before {
    width: 100%;
  }

  .category-item:hover,
  .category-item.active {
    color: white;
    transform: translateX(5px);
  }

  .category-item i:last-child {
    font-size: 12px;
    opacity: 0;
    transition: opacity 0.3s ease;
  }

  .category-item:hover i:last-child,
  .category-item.active i:last-child {
    opacity: 1;
  }

  /* ===== BOOK GRID ===== */
  .book-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
    gap: 20px;
    margin-bottom: 20px;
  }

  .book-item {
    text-decoration: none;
    display: block;
    position: relative;
  }

  .book-cover {
    height: 300px;
    overflow: hidden;
    border-radius: 10px;
    position: relative;
    transition: transform 0.3s ease;
  }

  .book-item:hover .book-cover {
    transform: scale(1.05);
  }

  .book-image {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .book-title-below {
    margin-top: 10px;
    text-align: center;
    min-height: 60px;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .book-title-below h5 {
    margin: 0;
    font-size: 1rem;
    color: #333;
    font-weight: 600;
  }

  .no-cover {
    width: 100%;
    height: 100%;
    background: #f5f5f5;
    display: flex;
    align-items: center;
    justify-content: center;
    color: #666;
  }

  /* ===== TOOLTIP ===== */
  .book-tooltip {
    position: absolute;
    top: 0;
    left: 100%;
    margin-left: 15px;
    background: radial-gradient(circle at top left, rgba(40, 0, 50, 0.95), rgba(10, 0, 20, 0.95));
    backdrop-filter: blur(15px) saturate(130%);
    color: #f5e8ff;
    padding: 22px;
    border-radius: 14px;
    font-size: 14px;
    z-index: 1000;
    display: none;
    width: 300px;
    border: 1px solid rgba(180, 100, 255, 0.3);
    box-shadow: 0 0 25px rgba(150, 0, 200, 0.4), 0 0 10px rgba(255, 0, 90, 0.3);
    animation: tooltipFadeIn 0.4s ease;
    pointer-events: none;
    font-family: 'Cinzel Decorative', 'Uncial Antiqua', serif;
  }

  @keyframes tooltipFadeIn {
    from {
      opacity: 0;
      transform: translateY(-10px) scale(0.95);
    }
    to {
      opacity: 1;
      transform: translateY(0) scale(1);
    }
  }

  .book-tooltip::before {
    content: '';
    position: absolute;
    left: -10px;
    top: 25px;
    width: 0;
    height: 0;
    border-top: 10px solid transparent;
    border-bottom: 10px solid transparent;
    border-right: 10px solid rgba(40, 0, 50, 0.95);
    filter: drop-shadow(0 0 5px rgba(150, 0, 200, 0.6));
  }

  .tooltip-title {
    font-size: 18px;
    font-weight: 700;
    margin-bottom: 10px;
    color: #ff3b6e;
    text-shadow: 0 0 8px rgba(255, 0, 100, 0.8);
    font-family: 'Cinzel Decorative', serif;
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  .tooltip-info {
    margin-bottom: 8px;
    display: flex;
    align-items: center;
    gap: 8px;
    color: #d6baff;
  }

  .tooltip-info i {
    color: #c77dff;
    width: 16px;
  }

  .tooltip-actions {
    margin-top: 15px;
    padding-top: 15px;
    border-top: 1px solid rgba(200, 150, 255, 0.2);
  }

  .favorite-btn {
    background: linear-gradient(135deg, rgba(255, 59, 110, 0.15), rgba(168, 85, 247, 0.15));
    border: 1px solid rgba(255, 59, 110, 0.3);
    color: #ffaddd;
    padding: 8px 15px;
    border-radius: 8px;
    cursor: pointer;
    width: 100%;
    text-align: center;
    transition: all 0.3s ease;
    font-family: inherit;
    pointer-events: all;
  }

  .favorite-btn:hover {
    background: linear-gradient(135deg, rgba(255, 59, 110, 0.3), rgba(168, 85, 247, 0.3));
    color: white;
    border-color: #ff3b6e;
    transform: scale(1.03);
  }

  .favorite-btn.favorited {
    background: linear-gradient(135deg, rgba(255, 59, 110, 0.5), rgba(168, 85, 247, 0.5));
    color: white;
    border-color: #ff3b6e;
  }

  .tooltip-description {
    margin-top: 12px;
    padding-top: 12px;
    border-top: 1px solid rgba(200, 150, 255, 0.2);
    font-size: 13px;
    line-height: 1.7;
    color: rgba(250, 240, 255, 0.85);
    max-height: 150px;
    overflow-y: auto;
    text-shadow: 0 0 5px rgba(180, 0, 255, 0.3);
  }

  .tooltip-description::-webkit-scrollbar {
    width: 4px;
  }

  .tooltip-description::-webkit-scrollbar-thumb {
    background: #667eea;
    border-radius: 2px;
  }

  /* ===== PAGINATION ===== */
  .pagination-wrapper {
    display: flex;
    justify-content: center;
    align-items: center;
  }

  .pagination-pro {
    display: flex;
    gap: 10px;
    list-style: none;
    padding: 0;
    margin: 0;
  }

  .page-link-pro {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 45px;
    height: 45px;
    border-radius: 12px;
    background: white;
    color: #667eea;
    text-decoration: none;
    font-weight: 600;
    transition: all 0.3s ease;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
  }

  .page-link-pro:hover {
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    color: white;
    transform: translateY(-3px);
    box-shadow: 0 5px 20px rgba(102, 126, 234, 0.3);
  }

  .page-link-pro.active {
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    color: white;
    box-shadow: 0 5px 20px rgba(102, 126, 234, 0.3);
  }

  /* ===== EMPTY STATE ===== */
  .empty-state {
    text-align: center;
    padding: 60px 20px;
  }

  .empty-icon {
    width: 120px;
    height: 120px;
    margin: 0 auto 30px;
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    color: white;
    font-size: 60px;
    animation: pulse 2s infinite;
  }

  @keyframes pulse {
    0%, 100% {
      transform: scale(1);
    }
    50% {
      transform: scale(1.05);
    }
  }

  @keyframes glow {
    from {
      box-shadow: 0 0 15px rgba(255, 0, 90, 0.3);
    }
    to {
      box-shadow: 0 0 35px rgba(180, 0, 255, 0.6);
    }
  }

  .empty-state h3 {
    font-size: 24px;
    font-weight: 700;
    color: #1f2937;
    margin-bottom: 10px;
  }

  .empty-state p {
    color: #6b7280;
    margin-bottom: 30px;
  }

  /* ===== RESPONSIVE ===== */
  @media (max-width: 768px) {
    .book-tooltip {
      left: auto;
      right: 100%;
      margin-left: 0;
      margin-right: 15px;
      width: 260px;
    }
    .book-item:hover .book-tooltip {
      animation: glow 1.5s infinite alternate;
    }

    .book-tooltip::before {
      left: auto;
      right: -10px;
      border-right: none;
      border-left: 10px solid rgba(40, 0, 50, 0.95);
    }

    .search-btn {
      width: 40px;
      height: 40px;
    }

    .book-cover {
      height: 200px;
    }

    .category-sidebar {
      margin-bottom: 30px;
    }
  }
</style>

<script>
document.addEventListener('DOMContentLoaded', () => {
  const bookItems = document.querySelectorAll('.book-item');
  console.log('Found book items:', bookItems.length);

  // Lấy danh sách favoriteBooks từ server (an toàn hơn)
  const favoriteBooks = <%- JSON.stringify(typeof favoriteBooks !== 'undefined' ? favoriteBooks : []) %>;
  console.log('Favorite books:', favoriteBooks);

  bookItems.forEach((item, index) => {
    const tooltip = document.createElement('div');
    tooltip.className = 'book-tooltip';
    
    const bookTitle = item.getAttribute('data-title') || 'Untitled';
    const bookAuthor = item.getAttribute('data-author') || 'Unknown Author';
    const bookDescription = item.getAttribute('data-description') || 'Chưa có mô tả cho cuốn sách này.';
    const bookCategory = item.getAttribute('data-category') || 'N/A';    
    const bookId = item.dataset.bookId;
    
    // Kiểm tra xem sách có trong danh sách yêu thích không
    const isFavorited = Array.isArray(favoriteBooks) && favoriteBooks.includes(bookId);

    tooltip.innerHTML = `
      <div class="tooltip-title">${bookTitle}</div>
      <div class="tooltip-info">
        <i class="fas fa-user"></i>
        <span>${bookAuthor}</span>
      </div>
      <div class="tooltip-info">
        <i class="fas fa-bookmark"></i>
        <span>${bookCategory}</span>
      </div>
      <div class="tooltip-actions">
        <button class="favorite-btn ${isFavorited ? 'favorited' : ''}" data-book-id="${bookId}">
          <i class="${isFavorited ? 'fas' : 'far'} fa-heart"></i> <span>${isFavorited ? 'Đã thích' : 'Yêu thích'}</span>
        </button>
      </div>
      <div class="tooltip-description">${bookDescription}</div>
    `;

    item.appendChild(tooltip);

    // Thêm sự kiện click cho nút yêu thích
    const favoriteBtn = tooltip.querySelector('.favorite-btn');
    favoriteBtn.addEventListener('click', (e) => {
      e.preventDefault(); 
      e.stopPropagation(); 
      handleFavoriteClick(favoriteBtn);
    });

    // Logic để hiển thị và ẩn tooltip
    let showTimeout;
    let hideTimeout;

    const showTooltip = () => {
      clearTimeout(hideTimeout);
      showTimeout = setTimeout(() => {
        const rect = item.getBoundingClientRect();
        const viewportWidth = window.innerWidth;
        const tooltipWidth = 300;

        if (rect.right + tooltipWidth + 30 > viewportWidth) {
          tooltip.style.left = 'auto';
          tooltip.style.right = '100%';
          tooltip.style.marginLeft = '0';
          tooltip.style.marginRight = '15px';
        } else {
          tooltip.style.left = '100%';
          tooltip.style.right = 'auto';
          tooltip.style.marginLeft = '15px';
          tooltip.style.marginRight = '0';
        }

        tooltip.style.display = 'block';
      }, 300);
    };

    const hideTooltip = () => {
      clearTimeout(showTimeout);
      hideTimeout = setTimeout(() => {
        tooltip.style.display = 'none';
      }, 200);
    };

    item.addEventListener('mouseenter', showTooltip);
    item.addEventListener('mouseleave', hideTooltip);
    tooltip.addEventListener('mouseenter', () => clearTimeout(hideTimeout));
    tooltip.addEventListener('mouseleave', hideTooltip);
  });

  async function handleFavoriteClick(button) {
  const isLoggedIn = <%- JSON.stringify(!!user) %>;
  console.log('🔐 User logged in:', isLoggedIn);
  if (!isLoggedIn) {
    alert('Vui lòng đăng nhập để sử dụng chức năng này!');
    window.location.href = '/users/login';
    return;
  }

  const bookId = button.dataset.bookId;
  const icon = button.querySelector('i');
  const text = button.querySelector('span');
  const isFavorited = icon.classList.contains('fas');

  try {
    const url = `/favorites/${bookId}`;
    const method = isFavorited ? 'DELETE' : 'POST';

    const response = await fetch(url, {
      method: method,
      headers: {
        'Content-Type': 'application/json',
        'Accept': 'application/json'
      },
      credentials: 'include',  // ✅ THÊM: Gửi cookie/session
      mode: 'cors'             // ✅ THÊM: Cho phép CORS nếu cần
    });

    if (response.ok) {
      icon.classList.toggle('far');
      icon.classList.toggle('fas');
      text.textContent = isFavorited ? 'Yêu thích' : 'Đã thích';
      button.classList.toggle('favorited');
      
      // ✅ Reload để cập nhật danh sách (hoặc implement refetch nếu muốn mượt)
      window.location.reload();
    } else {
      const result = await response.json();
      alert(result.message || 'Có lỗi xảy ra, vui lòng thử lại.');
    }
  } catch (error) {
    console.error('Lỗi khi thực hiện yêu thích:', error);
    alert('Không thể kết nối đến máy chủ. Vui lòng kiểm tra lại đường truyền.');
  }
}
  // uihasfsadj
});
</script>